name: Deploy container web to Stratosphere

on:
  push:
    branches:
      - 'main'
    paths:
       - 'ce/app-deployment/template/**'
       - 'envs/dev-us/web-container/**'
       - 'envs/psr-us/web-container/**'
       - 'envs/qa-us/web-container/**'

  workflow_dispatch:
    inputs:
      envType: 
        description: "Please select the Environment Type"
        required: true
        type: choice
        options: 
          - dev-us
          - psr-us
          - qa-us

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: lots0logs/gh-action-get-changed-files@2.2.2
        id: get_last_changed_files
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Echo
        run: |
          echo ${{ steps.get_last_changed_files.outputs.all }}
          cat ${HOME}/files.json
  
      - name: Detect environment(s)
        id: detect_environment
        run: |
          #!/bin/bash
          # Read JSON file generated by gh-action-get-changed-files community action
          # This file stores all file changes in last commit in a JSON file
          json_file="${HOME}/files.json"

          # Arrays to store matching file paths and extracted parts
          matching_paths=()
          extracted_parts=()

          file_paths=$(jq -r .[] "$json_file")

          # Loop through each file path
          for path in $file_paths; do
            # Check if the path matches the pattern env/*/web-container/
            if [[ $path =~ env/([^/]+)/web-container/[^/]+ ]]; then
              # Store the matching path
              matching_paths+=("$path")

              # Extract the * part (the part between env/ and /web-container/)
              extracted_part="${BASH_REMATCH[1]}"
              extracted_parts+=("$extracted_part")
            fi
          done

          echo "Matching Paths:"
          printf "%s\n" "${matching_paths[@]}"

          echo "Extracted Parts:"
          printf "%s\n" "${extracted_parts[@]}"
