name: Dynamic Deployment Pipeline

on:
  workflow_dispatch:
    inputs:
      environments:
        description: 'List of environments (comma-separated)'
        required: true
        type: string
      applications:
        description: 'List of application names (comma-separated)'
        required: true
        type: string

jobs:
  get-environments:
    runs-on: ubuntu-latest
    outputs:
      env_array: ${{ steps.envs.outputs.env_array }}
    steps:
      - name: Get environments
        id: envs
        run: |
          # Split the input environments into an array
          IFS=',' read -r -a env_array <<< "${{ github.event.inputs.environments }}"
          echo "Environments: ${env_array[@]}"
          # Write the array to GITHUB_OUTPUT for the next job
          echo "env_array=$(echo ${env_array[@]})" >> $GITHUB_OUTPUT

  get-applications:
    runs-on: ubuntu-latest
    needs: get-environments
    outputs:
      app_array: ${{ steps.apps.outputs.app_array }}
    steps:
      - name: Get applications
        id: apps
        run: |
          # Split the input applications into an array
          IFS=',' read -r -a app_array <<< "${{ github.event.inputs.applications }}"
          echo "Applications: ${app_array[@]}"
          # Write the array to GITHUB_OUTPUT for the next job
          echo "app_array=$(echo ${app_array[@]})" >> $GITHUB_OUTPUT

  deploy-applications:
    needs: [get-environments, get-applications]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ${{ fromJson(needs.get-environments.outputs.env_array) }}
        application: ${{ fromJson(needs.get-applications.outputs.app_array) }}
    steps:
      - name: Deploy application
        run: |
          echo "Deploying ${{ matrix.application }} to ${{ matrix.environment }}"
          # Add actual deployment command here (e.g., kubectl, terraform, etc.)
