name: Test File Deploy Matrix Blah Blah Workflow

on:
  push:
    branches:
      - main

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix-path: ${{ steps.store-matrix.outputs.matrix-path }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Python script to generate matrix
        run: |
          python script.py > matrix.json
          cat matrix.json  # For visibility in the logs

      - name: Store matrix file
        id: store-matrix
        run: |
          echo "matrix-path=${{ github.workspace }}/matrix.json" >> $GITHUB_ENV
          echo "matrix-path=${{ github.workspace }}/matrix.json"

  update-matrix:
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      matrix:
        include: ${{ fromJson(file(${{ needs.generate-matrix.outputs.matrix-path }}))['include'] }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Call API for deployment decision
        id: check-deployment
        run: |
          service=$(echo ${{ matrix.service }})
          environment=$(echo ${{ matrix.environment }})

          echo "Checking deployment for service: $service in environment: $environment"

          # Simulate an API call to check if the service should be deployed
          needs_deployment=$(curl -s -X POST "http://example.com/api/check" -d "service=$service&env=$environment")

          if [ "$needs_deployment" = "true" ]; then
            echo "Service $service in environment $environment needs deployment."
            echo '{"environment": "'$environment'", "service": "'$service'"}' >> updated_matrix.json
          else
            echo "Service $service in environment $environment does not need deployment."
          fi

      - name: Save updated matrix
        if: always()  # Ensure this step runs even if no services need deployment
        run: |
          if [ -f updated_matrix.json ]; then
            echo "Updated matrix saved."
          else
            echo "[]" > updated_matrix.json  # Handle case where no services need deployment

      - name: Upload updated matrix file
        uses: actions/upload-artifact@v3
        with:
          name: updated-matrix
          path: updated_matrix.json

  deploy-applications:
    runs-on: ubuntu-latest
    needs: update-matrix
    strategy:
      matrix:
        include: ${{ fromJson(file("${{ github.workspace }}/updated_matrix.json")) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy service
        run: |
          service=$(echo ${{ matrix.service }})
          environment=$(echo ${{ matrix.environment }})

          echo "Deploying service $service to environment $environment"

          # Add deployment logic here, for example:
          # curl -X POST "http://deployment.api/deploy" -d "service=$service&env=$environment"

      - name: Notify completion
        run: |
          echo "Deployment completed for service ${{ matrix.service }} in environment ${{ matrix.environment }}"
